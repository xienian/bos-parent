package com.itheima.bos.web.action.base;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;

public abstract class BaseAction<T> extends ActionSupport implements
		ModelDriven<T> {
	//几个视图
	public static final String HOME = "home";
	public static final String LIST = "list";

	protected T model;
	@Override
	public T getModel() {
		// TODO Auto-generated method stub
		return model;
	}
	
	//通过构造函数，给model属性赋值
	public BaseAction() {
		Class<T> clazz = (Class<T>) this.getClass();
		ParameterizedType parameterizedType =  (ParameterizedType) clazz.getGenericSuperclass();
		Type[] types = parameterizedType.getActualTypeArguments();
		Class<T> entityClass = (Class<T>) types[0];
		
		try {
			model = entityClass.newInstance();
		} catch (InstantiationException e) {
			
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			
			e.printStackTrace();
		}
	}
	
	
	

}
